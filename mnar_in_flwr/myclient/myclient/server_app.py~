"""MyClient: A Flower / PyTorch app."""

from flwr.common import Context, ndarrays_to_parameters
from flwr.server import ServerApp, ServerAppComponents, ServerConfig
from flwr.server.strategy import FedAvg
from myclient.task import Net, get_weights
from myclient.strategy import MnarStrategy
from flwr.common import Context
from flwr.server import ServerConfig, ServerApp, ServerAppComponents
from myclient.knobs import NUM_ROUNDS

def weighted_average(metrics):
    accuracies = [num_examples * m["accuracy"] for num_examples, m in metrics]
    examples = [num_examples for num_examples, _ in metrics]

    return {"accuracy": sum(accuracies) / sum(examples)}

def server_fn(context):
    strategy = MnarStrategy(
        fraction_fit=1.0,
        fraction_evaluate=1.0,
        #min_fit_clients=10,
        #min_evaluate_clients=10,
        #min_available_clients=10,
        evaluate_metrics_aggregation_fn = weighted_average
    )
    config = ServerConfig(num_rounds=NUM_ROUNDS)
    return ServerAppComponents(strategy=strategy, config=config)

# Create ServerApp
app = ServerApp(server_fn=server_fn)
